<Page x:Class="Projekt_WPF_TODO_app.Pages.WorkTaskPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:Projekt_WPF_TODO_app.Controls" xmlns:local1="clr-namespace:Projekt_WPF_TODO_app.Logic.Helpers"
      xmlns:sys="clr-namespace:System;assembly=mscorlib"
      xmlns:xctk1="http://schemas.xceed.com/wpf/xaml/toolkit"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="WorkTaskPage">

    

  

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Menu Grid.Row="0" Grid.Column="0" DockPanel.Dock="Top" Padding="5" Background="#FFA9D1F4">
            <Menu.ItemsPanel>
                <ItemsPanelTemplate>
                    <DockPanel HorizontalAlignment="Stretch"/>
                </ItemsPanelTemplate>
            </Menu.ItemsPanel>
            <MenuItem FontSize="15" Header="Ustawienia" HorizontalAlignment="Left" >
                <MenuItem FontSize="12" Header="Wyloguj się" HorizontalAlignment="Right" Click="Logout_click"/>
            </MenuItem>
           
        </Menu>

        <StackPanel Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center">
            <TextBlock Text="dupa" />
            <ScrollViewer Height="300">

                <DataGrid x:Name="dataGrid" AutoGenerateColumns="False" ItemsSource="{Binding WorkTaskList}" Margin="10" CanUserAddRows="False" MaxWidth="1100" SelectionUnit="FullRow" SelectedCellsChanged="dataGrid_SelectedCellsChanged" AddingNewItem="dataGrid_AddingNewItem">
                    <DataGrid.Columns>
                        <DataGridCheckBoxColumn Binding="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged}" >
                            <DataGridCheckBoxColumn.ElementStyle>
                                <Style TargetType="CheckBox"/>
                            </DataGridCheckBoxColumn.ElementStyle>
                        </DataGridCheckBoxColumn>
                        <DataGridTextColumn Visibility="Hidden" Header="Task id" Binding="{Binding TaskId}" IsReadOnly="True" />
                        <DataGridTextColumn Header="Title" Binding="{Binding TaskTitle}" IsReadOnly="True" Width="0.55*"/>
                        <DataGridTextColumn Header="Description" Binding="{Binding TaskDescription}" IsReadOnly="True" Width="*">
                            <DataGridTextColumn.ElementStyle>
                                <Style>
                                    <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                    <Setter Property="TextBlock.TextAlignment" Value="Left"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="Category" Binding="{Binding Category}" IsReadOnly="True" Width="0.55*"/>
                        <DataGridTemplateColumn  Header="Priority" SortMemberPath="TaskPriority" IsReadOnly="True" Width="0.55*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding TaskPriority}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <ComboBox ItemsSource="{Binding PriorityOptions}" SelectedItem="{Binding TaskPriority}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="Start date" SortMemberPath="FormattedStartDate" IsReadOnly="True" Width="0.55*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding FormattedStartDate}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <xctk1:DateTimePicker Text="{Binding FormattedStartDate, Mode=TwoWay}" Minimum="{x:Static sys:DateTime.Now}" Format="Custom" FormatString="yyyy-MM-dd HH:mm" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn >
                        <DataGridTemplateColumn Header="Due date" SortMemberPath="FormattedDueDate" IsReadOnly="True" Width="0.55*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding FormattedDueDate}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <xctk1:DateTimePicker Text="{Binding FormattedDueDate, Mode=TwoWay}" Minimum="{x:Static sys:DateTime.Now}" Format="Custom" FormatString="yyyy-MM-dd HH:mm"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn Header="Complited?" Binding="{Binding IsTaskComplited, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" Width="0.55*"/>
                        <DataGridTextColumn x:Name="completionDate" Header="Completion Date" Visibility="Hidden" Binding="{Binding FormattedCompletionDate, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" Width="0.55*"/>

                        <DataGridTemplateColumn Visibility="Hidden" x:Name="SubtaskTemplate1"   Header="Subtasks" IsReadOnly="True" Width="0.55*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button x:Name="buttonToShowSubtasks" Content="Check subtasks!" Click="openSubtaskWindow" IsEnabled="False"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>

                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn Visibility="Visible" x:Name="SubtaskTemplate" Header="Subtasks" IsReadOnly="True" Width="0.55*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button x:Name="buttonToShowSubtasks" Content="Check subtasks!" Click="openSubtaskWindow"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                     
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
                
            </ScrollViewer>

           
            <StackPanel Orientation="Horizontal">
                <Button Command="{Binding DeleteSelectedTasksCommend}" Content="Usun"/>
                <Button Command="{Binding AddSelectedTaskskToDoneListCommend}" Content="Przenieś do tasków ukończonych"  />
               

                <CheckBox x:Name="addEndEnableEditTask_checkbox" Content="Dodaj task / edytuj task" Checked="AddEndEnableEditTask_Checked" Unchecked="AddEndEnableEditTask_UnChecked" />
                <CheckBox x:Name="compitedTasks_checkbox" Content="Pokaż taski ukończone" Checked="ShowComplitedTasks_Checked" Unchecked="ShowComplitedTasks_UnChecked" />
               


            </StackPanel>
        </StackPanel>
       
    </Grid>
</Page>
